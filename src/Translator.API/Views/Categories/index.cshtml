@model IEnumerable<Translator.Application.Features.Category.Queries.GetRootCategories.RootCategoryDto>
@{
ViewData["Title"] = "Categories";
Layout = "_Layout";
}

<style>
    .categories-header {
        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        color: white;
        padding: 1rem 0;
        margin-bottom: 1rem;
        border-radius: 0.375rem;
    }

    .category-table {
        background: white;
        border-radius: 0.5rem;
        box-shadow: 0 4px 12px rgba(0,0,0,0.08);
        overflow: hidden;
        font-size: 0.875rem;
    }

    .category-table thead th {
        background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
        color: white;
        font-weight: 600;
        text-transform: uppercase;
        font-size: 0.75rem;
        letter-spacing: 0.025em;
        padding: 0.75rem 0.5rem;
        border: none;
    }

    .category-table tbody tr {
        transition: all 0.2s ease;
        border-bottom: 1px solid #f1f5f9;
    }

    .category-table tbody tr:hover {
        background-color: #f8fafc;
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
    }

    .category-table tbody td {
        padding: 0.75rem 0.5rem;
        vertical-align: middle;
    }

    .category-value {
        font-weight: 600;
        color: #1e293b;
        font-size: 0.875rem;
    }

    .category-type-badge {
        background: linear-gradient(135deg, #06b6d4 0%, #3b82f6 100%);
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-weight: 500;
        font-size: 0.75rem;
        text-transform: capitalize;
    }

    .category-order-badge {
        background: linear-gradient(135deg, #8b5cf6 0%, #a855f7 100%);
        color: white;
        padding: 0.25rem 0.5rem;
        border-radius: 0.375rem;
        font-weight: 500;
        font-size: 0.75rem;
    }

    .category-id-container {
        display: flex;
        align-items: center;
        gap: 0.25rem;
        flex-wrap: wrap;
    }

    .category-id {
        font-family: 'Courier New', monospace;
        font-size: 0.7rem;
        color: #64748b;
        background: #f1f5f9;
        padding: 0.2rem 0.4rem;
        border-radius: 0.2rem;
        flex: 1;
        min-width: 120px;
        word-break: break-all;
    }

    .copy-btn {
        background: linear-gradient(135deg, #6366f1 0%, #8b5cf6 100%);
        border: none;
        color: white;
        padding: 0.25rem 0.4rem;
        border-radius: 0.25rem;
        cursor: pointer;
        transition: all 0.2s ease;
        font-size: 0.65rem;
        min-width: 45px;
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.2rem;
    }

    .copy-btn:hover {
        background: linear-gradient(135deg, #4f46e5 0%, #7c3aed 100%);
        transform: translateY(-1px);
        box-shadow: 0 2px 6px rgba(99, 102, 241, 0.3);
    }

    .copy-btn.copied {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
    }

    .action-buttons {
        display: flex;
        gap: 0.25rem;
        justify-content: center;
        flex-wrap: wrap;
    }

    .action-btn {
        padding: 0.375rem;
        border-radius: 0.375rem;
        border: 2px solid transparent;
        transition: all 0.2s ease;
        display: inline-flex;
        align-items: center;
        justify-content: center;
        min-width: 32px;
        height: 32px;
        font-size: 0.75rem;
        text-decoration: none;
    }

    .action-btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(0,0,0,0.15);
        text-decoration: none;
    }

    .btn-view { background: linear-gradient(135deg, #3b82f6 0%, #1d4ed8 100%); color: white; }
    .btn-view:hover { color: white; }
    .btn-edit { background: linear-gradient(135deg, #f59e0b 0%, #d97706 100%); color: white; }
    .btn-edit:hover { color: white; }
    .btn-tree { background: linear-gradient(135deg, #10b981 0%, #059669 100%); color: white; }
    .btn-tree:hover { color: white; }
    .btn-delete { background: linear-gradient(135deg, #ef4444 0%, #dc2626 100%); color: white; border: none; cursor: pointer; }

    .add-category-btn {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        color: white;
        font-weight: 600;
        transition: all 0.2s ease;
        box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);
        font-size: 0.875rem;
        text-decoration: none;
        cursor: pointer;
    }

    .add-category-btn:hover {
        transform: translateY(-1px);
        box-shadow: 0 4px 12px rgba(16, 185, 129, 0.4);
        color: white;
        text-decoration: none;
    }

    .empty-state {
        text-align: center;
        padding: 2rem 1rem;
        color: #64748b;
    }

    .empty-state-icon {
        font-size: 2.5rem;
        margin-bottom: 0.5rem;
        color: #cbd5e1;
    }

    .stats-card {
        background: white;
        border-radius: 0.5rem;
        padding: 1rem;
        box-shadow: 0 2px 8px rgba(0,0,0,0.05);
        border-left: 3px solid #3b82f6;
    }

    .display-4 { font-size: 1.75rem; }
    .lead { font-size: 1rem; margin-bottom: 1rem !important; }

    .stats-card h3 { font-size: 1.5rem; }
    .stats-card i { font-size: 1.5rem !important; }

    .empty-state h3 { font-size: 1.25rem; }
    .empty-state p { font-size: 0.875rem; }

    /* Create form styles */
    .create-form {
        background: #f8fafc;
        border: 2px dashed #cbd5e1;
        border-radius: 0.5rem;
        padding: 1.5rem;
        margin-bottom: 1rem;
        display: none;
    }

    .create-form.show {
        display: block;
    }

    .form-row {
        display: flex;
        gap: 1rem;
        margin-bottom: 1rem;
        flex-wrap: wrap;
    }

    .form-group {
        flex: 1;
        min-width: 200px;
    }

    .form-label {
        font-weight: 600;
        color: #1e293b;
        font-size: 0.75rem;
        margin-bottom: 0.25rem;
        display: block;
    }

    .form-control {
        border: 2px solid #e2e8f0;
        border-radius: 0.375rem;
        padding: 0.5rem;
        font-size: 0.875rem;
        width: 100%;
        transition: all 0.2s ease;
    }

    .form-control:focus {
        outline: none;
        border-color: #667eea;
        box-shadow: 0 0 0 3px rgba(102, 126, 234, 0.1);
    }

    .form-actions {
        display: flex;
        gap: 0.5rem;
        justify-content: flex-end;
    }

    .btn-create {
        background: linear-gradient(135deg, #10b981 0%, #059669 100%);
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        color: white;
        font-weight: 600;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .btn-create:hover {
        transform: translateY(-1px);
        box-shadow: 0 2px 8px rgba(16, 185, 129, 0.3);
    }

    .btn-cancel {
        background: #6b7280;
        border: none;
        padding: 0.5rem 1rem;
        border-radius: 0.375rem;
        color: white;
        font-weight: 600;
        font-size: 0.875rem;
        cursor: pointer;
        transition: all 0.2s ease;
    }

    .btn-cancel:hover {
        background: #4b5563;
    }

    .required {
        color: #ef4444;
    }
</style>

<div class="container-fluid px-3">

    <!-- Header Section -->
    <div class="categories-header text-center">
        <div class="container">
            <h1 class="display-4 fw-bold mb-2">
                <i class="fas fa-layer-group me-2"></i>
                Categories
            </h1>
            <p class="lead mb-3">Manage your content categories</p>
            <button type="button" class="add-category-btn" onclick="toggleCreateForm()">
                <i class="fas fa-plus me-1"></i>Add New
            </button>
        </div>
    </div>

    <!-- Error Message -->
    @if (ViewBag.ErrorMessage != null)
    {
    <div class="alert alert-danger rounded-3 shadow-sm mb-3" role="alert">
        <i class="fas fa-exclamation-circle me-2"></i>
        @ViewBag.ErrorMessage
    </div>
    }

    <!-- Success Message -->
    @if (ViewBag.SuccessMessage != null)
    {
    <div class="alert alert-success rounded-3 shadow-sm mb-3" role="alert">
        <i class="fas fa-check-circle me-2"></i>
        @ViewBag.SuccessMessage
    </div>
    }

    <!-- Create Form -->
    <div class="create-form" id="createForm">
        <h5 class="mb-3">
            <i class="fas fa-plus me-2"></i>Create New Category
        </h5>
        <form action="@Url.Action("Create", "Categories")" method="post">
            <div class="form-row">
                <div class="form-group">
                    <label for="value" class="form-label">
                        Value <span class="required">*</span>
                    </label>
                    <input type="text"
                           class="form-control"
                           id="value"
                           name="value"
                           required
                           placeholder="Enter category value">
                </div>
                <div class="form-group">
                    <label for="type" class="form-label">
                        Type <span class="required">*</span>
                    </label>
                    <input type="text"
                           class="form-control"
                           id="type"
                           name="type"
                           required
                           placeholder="Enter category type">
                </div>
                <div class="form-group">
                    <label for="order" class="form-label">Order</label>
                    <input type="number"
                           class="form-control"
                           id="order"
                           name="order"
                           min="0"
                           placeholder="Display order">
                </div>
                <div class="form-group">
                    <label for="parentId" class="form-label">Parent ID</label>
                    <input type="text"
                           class="form-control"
                           id="parentId"
                           name="parentId"
                           placeholder="Parent category ID">
                </div>
            </div>
            <div class="form-actions">
                <button type="button" class="btn-cancel" onclick="toggleCreateForm()">
                    Cancel
                </button>
                <button type="submit" class="btn-create">
                    <i class="fas fa-save me-1"></i>Create Category
                </button>
            </div>
        </form>
    </div>

    <!-- Main Content -->
    <div class="row">
        <div class="col-12">
            @if (!Model.Any())
            {
            <div class="empty-state">
                <div class="empty-state-icon">
                    <i class="fas fa-folder-open"></i>
                </div>
                <h3 class="mb-2">No Categories Found</h3>
                <p class="mb-3">Start by creating your first category.</p>
                <button type="button" class="add-category-btn" onclick="toggleCreateForm()">
                    <i class="fas fa-plus me-1"></i>Create First Category
                </button>
            </div>
            }
            else
            {
            <div class="category-table">
                <table class="table table-hover mb-0 table-sm">
                    <thead>
                    <tr>
                        <th style="width: 8%;">Order</th>
                        <th style="width: 22%;">Value</th>
                        <th style="width: 12%;">Type</th>
                        <th style="width: 38%;">ID</th>
                        <th style="width: 20%;" class="text-center">Actions</th>
                    </tr>
                    </thead>
                    <tbody>
                    @foreach (var category in Model.OrderBy(c => c.Order ?? int.MaxValue))
                    {
                    <tr>
                        <td>
                            @if (category.Order.HasValue)
                            {
                            <span class="category-order-badge">@category.Order</span>
                            }
                            else
                            {
                            <span class="text-muted">—</span>
                            }
                        </td>
                        <td>
                            <div class="category-value">@category.Value</div>
                        </td>
                        <td>
                            <span class="category-type-badge">@category.Type</span>
                        </td>
                        <td>
                            <div class="category-id-container">
                                <code class="category-id">@category.Id</code>
                                <button type="button"
                                        class="copy-btn"
                                        onclick="copyToClipboard('@category.Id', this)"
                                        title="Copy ID">
                                    <i class="fas fa-copy"></i>
                                    <span class="copy-text d-none d-md-inline">Copy</span>
                                </button>
                            </div>
                        </td>
                        <td>
                            <div class="action-buttons">
                                <a href="@Url.Action("Details", "Categories", new { id = category.Id })"
                                   class="action-btn btn-view" title="View">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a href="@Url.Action("Edit", "Categories", new { id = category.Id })"
                                   class="action-btn btn-edit" title="Edit">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a href="@Url.Action("Tree", "Categories", new { id = category.Id })"
                                   class="action-btn btn-tree" title="Tree">
                                    <i class="fas fa-sitemap"></i>
                                </a>
                                <form action="@Url.Action("Delete", "Categories")" method="post" style="display: inline;">
                                    <input type="hidden" name="id" value="@category.Id" />
                                    <button type="submit"
                                            class="action-btn btn-delete"
                                            title="Delete @category.Value">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </form>
                            </div>
                        </td>
                    </tr>
                    }
                    </tbody>
                </table>
            </div>
            }
        </div>
    </div>
</div>

<script>
    // Toggle create form visibility
    function toggleCreateForm() {
        const form = document.getElementById('createForm');
        form.classList.toggle('show');

        if (form.classList.contains('show')) {
            document.getElementById('value').focus();
        }
    }

    // Copy to clipboard function
    async function copyToClipboard(text, button) {
        try {
            if (navigator.clipboard && window.isSecureContext) {
                await navigator.clipboard.writeText(text);
            } else {
                const textArea = document.createElement('textarea');
                textArea.value = text;
                textArea.style.position = 'absolute';
                textArea.style.left = '-9999px';
                document.body.appendChild(textArea);
                textArea.select();
                document.execCommand('copy');
                document.body.removeChild(textArea);
            }

            const icon = button.querySelector('i');
            const textSpan = button.querySelector('.copy-text');

            button.classList.add('copied');
            icon.className = 'fas fa-check';
            if (textSpan) textSpan.textContent = 'Done!';

            setTimeout(() => {
                button.classList.remove('copied');
                icon.className = 'fas fa-copy';
                if (textSpan) textSpan.textContent = 'Copy';
            }, 2000);

        } catch (err) {
            console.error('Failed to copy text: ', err);
        }
    }

    // Auto-hide alerts after 5 seconds
    document.addEventListener('DOMContentLoaded', function() {
        const alerts = document.querySelectorAll('.alert');
        alerts.forEach(function(alert) {
            setTimeout(function() {
                if (alert && alert.parentNode) {
                    alert.style.opacity = '0';
                    alert.style.transition = 'opacity 0.3s';
                    setTimeout(function() {
                        if (alert.parentNode) {
                            alert.parentNode.removeChild(alert);
                        }
                    }, 300);
                }
            }, 5000);
        });
    });
</script>
