@model IEnumerable<Translator.Application.Features.TemplatesAdmin.Queries.AdminGetAllTemplates.Response>

@{
    Layout = "_Layout";
    ViewBag.Title = "Templates";
    var currentPage = ViewBag.CurrentPage ?? 1;
    var pageSize = ViewBag.PageSize ?? 25;
    var totalPages = ViewBag.TotalPages ?? 1;
    var totalCount = ViewBag.TotalCount ?? 0;
    var sortBy = ViewBag.SortBy as string ?? "name";
    var sortDirection = ViewBag.SortDirection as string ?? "asc";
    var searchKey = ViewBag.TemplateName as string ?? "";
    var globalCount = ViewBag.GlobalCount ?? 0;
    var userCount = ViewBag.UserCount ?? 0;
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <h4><i class="fas fa-layer-group"></i> Templates 
            <small class="text-muted" id="totalCountInfo">(@totalCount total)</small>
        </h4>
        <div class="small text-muted">
            <span class="badge bg-success me-1">@globalCount Global</span>
            <span class="badge bg-info">@userCount User</span>
        </div>
    </div>
    <button class="btn btn-success btn-sm" type="button" data-bs-toggle="collapse" data-bs-target="#createTemplateSection">
        <i class="fas fa-plus"></i> Create Template
    </button>
</div>

<!-- Alert container -->
<div id="alertContainer">
    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success alert-dismissible fade show">
            @TempData["SuccessMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }

    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger alert-dismissible fade show">
            @TempData["ErrorMessage"]
            <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
        </div>
    }
</div>

<!-- Search & Filters -->
<div class="card mb-3">
    <div class="card-body py-2">
        <form id="searchForm" class="row g-2 align-items-end">
            <div class="col-md-4">
                <input type="text" id="searchInput" name="templateName"
                       value="@searchKey"
                       class="form-control form-control-sm"
                       placeholder="Search templates..."/>
            </div>
            <div class="col-md-3">
                <select id="ownershipFilter" class="form-select form-select-sm">
                    <option value="">All Templates</option>
                    <option value="global">Global Only</option>
                    <option value="user">User Only</option>
                </select>
            </div>
            <div class="col-md-2">
                <button type="submit" class="btn btn-primary btn-sm me-1">
                    <i class="fas fa-search"></i> Search
                </button>
                <button type="button" id="clearSearchBtn" class="btn btn-outline-secondary btn-sm"
                        style="display: @(string.IsNullOrEmpty(searchKey) ? "none" : "inline-block")">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <div class="col-md-3 text-end">
                <select id="pageSizeSelect" class="form-select form-select-sm d-inline-block" style="width: 80px;">
                    <option value="10" @(pageSize == 10 ? "selected" : "")>10</option>
                    <option value="25" @(pageSize == 25 ? "selected" : "")>25</option>
                    <option value="50" @(pageSize == 50 ? "selected" : "")>50</option>
                </select>
                <span class="small text-muted ms-2">per page</span>
            </div>
        </form>
    </div>
</div>

<!-- Create Template Form -->
<div class="collapse mb-3" id="createTemplateSection">
    <div class="card">
        <div class="card-header py-2">
            <h6 class="mb-0">Create Global Template</h6>
        </div>
        <div class="card-body p-3">
            <form id="createTemplateForm">
                <div class="row g-3">
                    <div class="col-md-4">
                        <label for="templateName" class="form-label small">Template Name</label>
                        <input type="text" name="templateName" id="templateName" class="form-control form-control-sm" required>
                    </div>
                    <div class="col-md-8">
                        <label class="form-label small">Template Values</label>
                        <div id="valuesContainer">
                            <div class="mb-2 value-input-group">
                                <div class="position-relative">
                                    <input type="text" name="values" class="form-control form-control-sm value-input"
                                           placeholder="Type to search for values..."
                                           autocomplete="off" required>
                                    <div class="autocomplete-dropdown" style="display: none;"></div>
                                </div>
                                <button class="btn btn-outline-danger btn-sm mt-1" type="button" onclick="removeValueInput(this)" disabled>
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </div>
                        <button type="button" class="btn btn-outline-primary btn-sm" onclick="addValueInput()">
                            <i class="fas fa-plus"></i> Add Value
                        </button>
                    </div>
                </div>
                
                <div class="d-flex gap-2 mt-3">
                    <button type="submit" class="btn btn-success btn-sm">
                        <span class="spinner-border spinner-border-sm d-none me-2" role="status"></span>
                        Create Global Template
                    </button>
                    <button type="button" class="btn btn-secondary btn-sm" onclick="templateManager.clearForm()">Clear</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Templates Table -->
<div class="card">
    <div class="table-responsive">
        <table class="table table-hover table-sm align-middle mb-0">
            <thead class="table-light">
            <tr>
                <th>
                    <span>Template</span>
                    <button class="btn btn-link btn-sm p-0 ms-1 sort-btn" data-sort="name" title="Sort by name">
                        <i class="fas fa-sort sort-icon-name text-muted"></i>
                    </button>
                </th>
                <th>Owner</th>
                <th>
                    <span>Values</span>
                    <button class="btn btn-link btn-sm p-0 ms-1 sort-btn" data-sort="value" title="Sort by count">
                        <i class="fas fa-sort sort-icon-value text-muted"></i>
                    </button>
                </th>
                <th width="140">Actions</th>
            </tr>
            </thead>
            <tbody id="templatesTableBody">
            @if (Model != null && Model.Any())
            {
                foreach (var template in Model)
                {
                    <tr>
                        <td>
                            <div class="d-flex align-items-center gap-2">
                                <span class="fw-medium">@template.TemplateName</span>
                                <button class="btn btn-outline-secondary btn-sm px-2 py-1"
                                        onclick="copyTemplateId('@template.TemplateId')"
                                        title="Copy Template ID">
                                    <i class="fas fa-copy fa-xs"></i>
                                </button>
                            </div>
                        </td>
                        <td>
                            @if (template.IsGlobal)
                            {
                                <span class="badge bg-success">Global</span>
                            }
                            else
                            {
                                <span class="badge bg-info">@template.OwnerName</span>
                            }
                        </td>
                        <td>
                            <span class="badge bg-secondary">@template.ValueCount</span>
                        </td>
                        <td>
                            <div class="d-flex gap-1">
                                <a href="@Url.Action("Details", "Templates", new
                                         {
                                             templateId = template.TemplateId,
                                             templateName = template.TemplateName,
                                             lang = "",
                                             pageNumber = 1,
                                             pageSize = 10
                                         })" class="btn btn-outline-primary btn-sm">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <button class="btn btn-outline-danger btn-sm"
                                        onclick="showDeleteModal('@Html.Raw(Html.Encode(template.TemplateName))')">
                                    <i class="fas fa-trash"></i>
                                </button>
                            </div>
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr id="emptyState">
                    <td colspan="4" class="text-center text-muted py-4">
                        <i class="fas fa-inbox fa-2x mb-2 d-block"></i>
                        <div>No templates found</div>
                        @if (!string.IsNullOrEmpty(searchKey))
                        {
                            <small class="text-muted">Try adjusting your search criteria</small>
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
</div>

<!-- Pagination -->
<div id="paginationContainer">
    @if (Model != null && Model.Any() && totalPages > 1)
    {
        <nav class="mt-3">
            <div class="d-flex justify-content-between align-items-center mb-2">
                <small class="text-muted" id="paginationInfo">
                    Showing @((currentPage - 1) * pageSize + 1) to @Math.Min(currentPage * pageSize, totalCount) of @totalCount results
                </small>
                <small class="text-muted">Page @currentPage of @totalPages</small>
            </div>

            <ul class="pagination pagination-sm justify-content-center">
                @if (currentPage > 1)
                {
                    <li class="page-item">
                        <a class="page-link page-link-custom" href="#" data-page="1">First</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link page-link-custom" href="#" data-page="@(currentPage - 1)">Previous</a>
                    </li>
                }

                @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
                {
                    if (i == currentPage)
                    {
                        <li class="page-item active">
                            <span class="page-link">@i</span>
                        </li>
                    }
                    else
                    {
                        <li class="page-item">
                            <a class="page-link page-link-custom" href="#" data-page="@i">@i</a>
                        </li>
                    }
                }

                @if (currentPage < totalPages)
                {
                    <li class="page-item">
                        <a class="page-link page-link-custom" href="#" data-page="@(currentPage + 1)">Next</a>
                    </li>
                    <li class="page-item">
                        <a class="page-link page-link-custom" href="#" data-page="@totalPages">Last</a>
                    </li>
                }
            </ul>
        </nav>
    }
    else if (Model != null && Model.Any())
    {
        <div class="mt-3 text-center">
            <small class="text-muted">Showing all @totalCount results</small>
        </div>
    }
</div>

<!-- Delete Modal -->
<div class="modal fade" id="deleteTemplateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h6 class="modal-title">Delete Template</h6>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to delete template <strong id="templateNameToDelete"></strong>?</p>
                <div class="alert alert-warning py-2">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>Warning:</strong> This action cannot be undone!
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary btn-sm" data-bs-dismiss="modal">Cancel</button>
                <button type="button" class="btn btn-danger btn-sm" id="confirmDeleteBtn">
                    <i class="fas fa-trash"></i> Delete
                </button>
            </div>
        </div>
    </div>
</div>

<style>
    .value-input-group {
        border: 1px solid #e9ecef;
        border-radius: 6px;
        padding: 10px;
        background-color: #f8f9fa;
    }

    .autocomplete-dropdown {
        position: absolute;
        top: 100%;
        left: 0;
        right: 0;
        background: white;
        border: 1px solid #ced4da;
        border-radius: 0 0 6px 6px;
        max-height: 200px;
        overflow-y: auto;
        z-index: 1000;
        box-shadow: 0 2px 10px rgba(0,0,0,0.1);
    }

    .autocomplete-item {
        padding: 8px 12px;
        cursor: pointer;
        border-bottom: 1px solid #f8f9fa;
        transition: background-color 0.2s;
    }

    .autocomplete-item:hover,
    .autocomplete-item.active {
        background-color: #e9ecef;
    }

    .table th {
        border-top: none;
        font-weight: 600;
        background-color: #f8f9fa;
    }

    .btn-sm {
        font-size: 0.8rem;
    }

    .fa-xs {
        font-size: 0.75rem;
    }

    .fw-medium {
        font-weight: 500;
    }
</style>

<script src="~/js/templates.js"></script>
