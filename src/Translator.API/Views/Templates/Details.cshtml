@model IEnumerable<Translator.Application.Features.Template.Queries.GetTemplate.TemplateDto>

@{
    Layout = "_Layout";
    ViewBag.Title = "Template details";
    var templateName = ViewBag.TemplateName as string ?? "";
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Template: <span class="badge bg-primary fs-6">@templateName</span></h2>
    @Html.ActionLink("Back to list", "Index", "Templates", null, new { @class = "btn btn-outline-secondary" })
</div>

@if (Model != null && Model.Any())
{
    <div class="card">
        <div class="card-header d-flex justify-content-between align-items-center">
            <h5 class="mb-0">
                <i class="fas fa-list"></i> Template Content
            </h5>
            <span class="badge bg-info">@Model.Count() Elements</span>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-hover table-striped">
                    <thead class="table-dark">
                        <tr>
                            <th width="20%">Key</th>
                            <th width="80%">Value</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model)
                        {
                            <tr>
                                <td>
                                    <code class="text-primary">@item.Key</code>
                                </td>
                                <td class="text-break">
                                    @item.Value
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
}
else
{
    <div class="card">
        <div class="card-body text-center py-5">
            <i class="fas fa-inbox fa-4x text-muted mb-3"></i>
            <h5 class="text-muted">Empty Template</h5>
            <p class="text-muted">This template is empty</p>
            @Html.ActionLink("Return to list", "Index", "Templates", null, new { @class = "btn btn-primary" })
        </div>
    </div>
}

<div class="mt-4">
    <div class="d-flex gap-2"><button class="btn btn-danger" onclick="showDeleteModal('@Html.Raw(Html.Encode(templateName))')">
            <i class="fas fa-trash"></i> Delete Template
        </button>
    </div>
</div>

<!-- Модальное окно удаления -->
<div class="modal fade" id="deleteTemplateModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Delete Tempalate</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure to delete Template? <strong>@templateName</strong>?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>Warning:</strong> This action cannot be undone!
                </div>
            </div>
            <div class="modal-footer">
                @using (Html.BeginForm("Delete", "Templates", FormMethod.Post, new { id = "deleteTemplateForm" }))
                {
                    @Html.Hidden("templateName", templateName)
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Отмена</button>
                    <button type="submit" class="btn btn-danger">
                        <i class="fas fa-trash"></i> Delete
                    </button>
                }
            </div>
        </div>
    </div>
</div>

<script>
    function showDeleteModal(templateName) {
        const modal = new bootstrap.Modal(document.getElementById('deleteTemplateModal'));
        modal.show();
    }
</script>

<style>
    .badge.fs-6 {
        font-size: 1rem !important;
    }
    
    .text-break {
        word-break: break-word;
    }
    
</style>
