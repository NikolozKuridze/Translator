@model IEnumerable<Translator.Application.Features.Language.Queries.GetLanguages.GetLanguagesResponse>

@{
    ViewBag.Title = "Languages";
    Layout = "_Layout";
    var currentPage = ViewBag.CurrentPage ?? 1;
    var pageSize = ViewBag.PageSize ?? 10;
    var totalPages = ViewBag.TotalPages ?? 1;
    var totalCount = ViewBag.TotalCount ?? 0;
    var filterName = ViewBag.FilterName as string ?? "";
    var filterActive = ViewBag.FilterActive as bool?;
}

<div class="d-flex justify-content-between align-items-center mb-4">
    <h2>Languages <small class="text-muted">(@totalCount total)</small></h2>
</div>

@if (TempData["SuccessMessage"] != null)
{
    <div class="alert alert-success alert-dismissible fade show">
        @TempData["SuccessMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

@if (TempData["ErrorMessage"] != null)
{
    <div class="alert alert-danger alert-dismissible fade show">
        @TempData["ErrorMessage"]
        <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
    </div>
}

<!-- Languages Table with integrated filters -->
<div class="card">
    <div class="card-body" style="padding:0;">
        <div class="table-responsive">
            <table class="table table-hover align-middle mb-0">
                <thead class="table-light">
                    <tr>
                        <th scope="col">
                            Name or Code
                            @using (Html.BeginForm("Index", "Languages", FormMethod.Get, new { @class = "d-inline" }))
                            {
                                @Html.Hidden("pageNumber", 1)
                                @Html.Hidden("pageSize", pageSize, null)
                                @Html.Hidden("filterActive", filterActive)
                                @Html.TextBox("filterName", filterName, new { 
                                    @class = "form-control form-control-sm mt-1", 
                                    placeholder = "Search by code or name...",
                                    style = "width: 200px;",
                                    onchange = "this.form.submit();" 
                                })
                            }
                        </th>
                        <th scope="col">Code</th>
                        <th scope="col">Unicode Range</th>
                        <th scope="col">
                            Status
                            @using (Html.BeginForm("Index", "Languages", FormMethod.Get, new { @class = "d-inline" }))
                            {
                                @Html.Hidden("pageNumber", 1)
                                @Html.Hidden("pageSize", pageSize, null)
                                @Html.Hidden("filterName", filterName)
                                @Html.DropDownList("filterActive", new List<SelectListItem>
                                {
                                    new SelectListItem { Text = "All", Value = "", Selected = !filterActive.HasValue },
                                    new SelectListItem { Text = "Active", Value = "true", Selected = filterActive == true },
                                    new SelectListItem { Text = "Inactive", Value = "false", Selected = filterActive == false }
                                }, new { 
                                    @class = "form-select form-select-sm mt-1", 
                                    style = "width: 120px;",
                                    onchange = "this.form.submit();" 
                                })
                            }
                        </th>
                        <th scope="col">Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model != null && Model.Any())
                    {
                        int counter = (currentPage - 1) * pageSize + 1;
                        foreach (var language in Model)
                        {
                            <tr class="@(language.IsActive ? "" : "table-secondary")">
                                <td>
                                    <span class="@(language.IsActive ? "" : "text-muted")">
                                        <strong>@(string.IsNullOrEmpty(language.LanguageName) ? "N/A" : language.LanguageName)</strong>
                                    </span>
                                </td>
                                <td>
                                    <span class="badge @(language.IsActive ? "bg-primary" : "bg-secondary")">
                                        @language.LanguageCode.ToUpper()
                                    </span>
                                </td>
                                <td>
                                    <code class="text-muted">@(string.IsNullOrEmpty(language.UnicodeRange) ? "N/A" : language.UnicodeRange)</code>
                                </td>
                                <td>
                                    @if (language.IsActive)
                                    {
                                        <span class="badge bg-success">
                                            <i class="fas fa-check-circle"></i> Active
                                        </span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-secondary">
                                            <i class="fas fa-times-circle"></i> Inactive
                                        </span>
                                    }
                                </td>
                                <td>
                                    @if (language.IsActive)
                                    {
                                        <button class="btn btn-sm btn-outline-warning" onclick="showDeactivateModal('@Html.Raw(Html.Encode(language.LanguageCode))', '@Html.Raw(Html.Encode(language.LanguageName))')">
                                            <i class="fas fa-pause"></i> Deactivate
                                        </button>
                                    }
                                    else
                                    {
                                        <button class="btn btn-sm btn-outline-success" onclick="showActivateModal('@Html.Raw(Html.Encode(language.LanguageCode))', '@Html.Raw(Html.Encode(language.LanguageName))')">
                                            <i class="fas fa-play"></i> Activate
                                        </button>
                                    }
                                </td>
                            </tr>
                            counter++;
                        }
                    }
                    else
                    {
                        <tr>
                            <td colspan="5" class="text-center text-muted py-4">
                                <i class="fas fa-search fa-3x mb-3"></i>
                                <div>No languages found matching your filters</div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Pagination -->
@if (Model != null && Model.Any())
{
    <nav class="mt-4">
        <div class="d-flex justify-content-between align-items-center mb-2">
            <small class="text-muted">
                Showing @((currentPage - 1) * pageSize + 1) to @Math.Min(currentPage * pageSize, totalCount) of @totalCount results
            </small>
            <small class="text-muted">Page @currentPage of @totalPages</small>
        </div>
        
        <ul class="pagination justify-content-center">
            <!-- First page button -->
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        pageNumber = 1, 
                        pageSize, 
                        filterName,
                        filterActive 
                    })" title="First page">
                        <i class="fas fa-angle-double-left"></i> First
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link"><i class="fas fa-angle-double-left"></i> First</span>
                </li>
            }

            <!-- Previous button -->
            @if (currentPage > 1)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        pageNumber = currentPage - 1, 
                        pageSize,
                        filterName,
                        filterActive 
                    })">Previous</a>
                </li>
            }
            else 
            { 
                <li class="page-item disabled">
                    <span class="page-link">Previous</span>
                </li> 
            }

            <!-- Page numbers -->
            @for (int i = Math.Max(1, currentPage - 2); i <= Math.Min(totalPages, currentPage + 2); i++)
            {
                if (i == currentPage)
                {
                    <li class="page-item active">
                        <span class="page-link">@i</span>
                    </li>
                }
                else
                {
                    <li class="page-item">
                        <a class="page-link" href="@Url.Action("Index", new { 
                            pageNumber = i, 
                            pageSize,
                            filterName,
                            filterActive 
                        })">@i</a>
                    </li>
                }
            }

            <!-- Next button -->
            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        pageNumber = currentPage + 1, 
                        pageSize,
                        filterName,
                        filterActive 
                    })">Next</a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Next</span>
                </li>
            }

            <!-- Last page button -->
            @if (currentPage < totalPages)
            {
                <li class="page-item">
                    <a class="page-link" href="@Url.Action("Index", new { 
                        pageNumber = totalPages, 
                        pageSize,
                        filterName,
                        filterActive 
                    })" title="Last page">
                        Last <i class="fas fa-angle-double-right"></i>
                    </a>
                </li>
            }
            else
            {
                <li class="page-item disabled">
                    <span class="page-link">Last <i class="fas fa-angle-double-right"></i></span>
                </li>
            }
        </ul>
    </nav>

    <!-- Page size selector -->
    <div class="d-flex justify-content-end align-items-center mt-3">
        @using (Html.BeginForm("Index", "Languages", FormMethod.Get, new { @class = "d-flex align-items-center" }))
        {
            @Html.Hidden("pageNumber", 1)
            @Html.Hidden("filterName", filterName)
            @Html.Hidden("filterActive", filterActive)
            
            <label class="form-label me-2 mb-0">Show:</label>
            @Html.DropDownList("pageSize", new List<SelectListItem>
            {
                new SelectListItem { Text = "5", Value = "5", Selected = pageSize == 5 },
                new SelectListItem { Text = "10", Value = "10", Selected = pageSize == 10 },
                new SelectListItem { Text = "25", Value = "25", Selected = pageSize == 25 },
                new SelectListItem { Text = "50", Value = "50", Selected = pageSize == 50 }
            }, new { 
                @class = "form-select form-select-sm", 
                style = "width: 80px;",
                onchange = "this.form.submit();" 
            })
        }
    </div>
}

<!-- Deactivate Modal -->
<div class="modal fade" id="deactivateLanguageModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Deactivate Language</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to deactivate this language?</p>
                <div class="alert alert-warning">
                    <i class="fas fa-exclamation-triangle"></i>
                    <strong>Warning:</strong> The language will be marked as inactive but not deleted.
                </div>
                <div class="language-info">
                    <p><strong>Language Code:</strong> <span id="languageCodeToDeactivate"></span></p>
                    <p><strong>Language Name:</strong> <span id="languageNameToDeactivate"></span></p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                @using (Html.BeginForm("Deactivate", "Languages", FormMethod.Post, new { id = "deactivateLanguageForm" }))
                {
                    @Html.Hidden("code", "")
                    <button type="submit" class="btn btn-warning">
                        <i class="fas fa-pause"></i> Deactivate
                    </button>
                }
            </div>
        </div>
    </div>
</div>

<!-- Activate Modal -->
<div class="modal fade" id="activateLanguageModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Activate Language</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <p>Are you sure you want to activate this language?</p>
                <div class="alert alert-success">
                    <i class="fas fa-info-circle"></i>
                    <strong>Note:</strong> The language will be marked as active and available for use.
                </div>
                <div class="language-info">
                    <p><strong>Language Code:</strong> <span id="languageCodeToActivate"></span></p>
                    <p><strong>Language Name:</strong> <span id="languageNameToActivate"></span></p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                @using (Html.BeginForm("Activate", "Languages", FormMethod.Post, new { id = "activateLanguageForm" }))
                {
                    @Html.Hidden("code", "")
                    <button type="submit" class="btn btn-success">
                        <i class="fas fa-play"></i> Activate
                    </button>
                }
            </div>
        </div>
    </div>
</div>

<script>
    function showDeactivateModal(languageCode, languageName) {
        document.getElementById('languageCodeToDeactivate').textContent = languageCode.toUpperCase();
        document.getElementById('languageNameToDeactivate').textContent = languageName || 'N/A';
        document.querySelector('#deactivateLanguageForm input[name="code"]').value = languageCode;
        
        const modal = new bootstrap.Modal(document.getElementById('deactivateLanguageModal'));
        modal.show();
    }

    function showActivateModal(languageCode, languageName) {
        document.getElementById('languageCodeToActivate').textContent = languageCode.toUpperCase();
        document.getElementById('languageNameToActivate').textContent = languageName || 'N/A';
        document.querySelector('#activateLanguageForm input[name="code"]').value = languageCode;
        
        const modal = new bootstrap.Modal(document.getElementById('activateLanguageModal'));
        modal.show();
    }

    document.addEventListener('DOMContentLoaded', function() {
        const successAlert = document.querySelector('.alert-success');
        if (successAlert) {
            setTimeout(() => {
                const alert = new bootstrap.Alert(successAlert);
                alert.close();
            }, 5000);
        }

        const errorAlert = document.querySelector('.alert-danger');
        if (errorAlert) {
            setTimeout(() => {
                const alert = new bootstrap.Alert(errorAlert);
                alert.close();
            }, 5000);
        }
    });
</script>

<style>
    .language-info {
        background-color: #f8f9fa;
        padding: 15px;
        border-radius: 5px;
        border-left: 4px solid #007bff;
    }

    .table-secondary {
        --bs-table-bg: #f8f9fa;
        opacity: 0.7;
    }

    .badge {
        font-size: 0.875em;
    }

    code {
        font-size: 0.875em;
    }
</style>
