// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Translator.Infrastructure.Database.Postgres;

#nullable disable

namespace Translator.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Translator.Domain.DataModels.Template", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Hash")
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)")
                        .HasColumnName("hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(32)
                        .HasColumnType("character varying(32)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_template");

                    b.HasIndex("Hash")
                        .IsUnique()
                        .HasDatabaseName("ix_template_hash");

                    b.ToTable("template", (string)null);
                });

            modelBuilder.Entity("Translator.Domain.DataModels.TemplateValue", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("hash");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("key");

                    b.Property<Guid>("TemplateId")
                        .HasColumnType("uuid")
                        .HasColumnName("template_id");

                    b.HasKey("Id")
                        .HasName("pk_template_value");

                    b.HasIndex("Hash")
                        .IsUnique()
                        .HasDatabaseName("ix_template_value_hash");

                    b.HasIndex("TemplateId")
                        .HasDatabaseName("ix_template_value_template_id");

                    b.ToTable("template_value", (string)null);
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("language");

                    b.Property<DateTimeOffset>("Modified")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("modified");

                    b.Property<Guid>("TemplateValueId")
                        .HasColumnType("uuid")
                        .HasColumnName("template_value_id");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_translation");

                    b.HasIndex("TemplateValueId")
                        .HasDatabaseName("ix_translation_template_value_id");

                    b.ToTable("translation", (string)null);
                });

            modelBuilder.Entity("Translator.Domain.DataModels.TemplateValue", b =>
                {
                    b.HasOne("Translator.Domain.DataModels.Template", "Template")
                        .WithMany("TemplateValues")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_template_value_template_template_id");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Translation", b =>
                {
                    b.HasOne("Translator.Domain.DataModels.TemplateValue", "TemplateValue")
                        .WithMany("Translations")
                        .HasForeignKey("TemplateValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_translation_template_value_template_value_id");

                    b.Navigation("TemplateValue");
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Template", b =>
                {
                    b.Navigation("TemplateValues");
                });

            modelBuilder.Entity("Translator.Domain.DataModels.TemplateValue", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
