// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Translator.Infrastructure.Database.Postgres;

#nullable disable

namespace Translator.Infrastructure.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250819104511_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("TemplateValue", b =>
                {
                    b.Property<Guid>("TemplatesId")
                        .HasColumnType("uuid")
                        .HasColumnName("templates_id");

                    b.Property<Guid>("ValuesId")
                        .HasColumnType("uuid")
                        .HasColumnName("values_id");

                    b.HasKey("TemplatesId", "ValuesId")
                        .HasName("pk_template_values");

                    b.HasIndex("ValuesId")
                        .HasDatabaseName("ix_template_values_values_id");

                    b.ToTable("TemplateValues", (string)null);
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<int?>("Order")
                        .HasColumnType("integer")
                        .HasColumnName("order");

                    b.Property<Guid?>("ParentId")
                        .HasColumnType("uuid")
                        .HasColumnName("parent_id");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("type");

                    b.Property<string>("Value")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)")
                        .HasColumnName("value");

                    b.HasKey("Id")
                        .HasName("pk_categories");

                    b.HasIndex("ParentId")
                        .HasDatabaseName("ix_categories_parent_id");

                    b.ToTable("categories", (string)null);
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Language", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)")
                        .HasColumnName("code");

                    b.Property<bool>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(false)
                        .HasColumnName("is_active");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("character varying(50)")
                        .HasColumnName("name");

                    b.Property<string>("UnicodeRange")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("unicode_range");

                    b.HasKey("Id")
                        .HasName("pk_languages");

                    b.HasIndex("Code")
                        .IsUnique()
                        .HasDatabaseName("ix_languages_code");

                    b.ToTable("languages", (string)null);
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Template", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(24)
                        .HasColumnType("character varying(24)")
                        .HasColumnName("hash");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_templates");

                    b.HasIndex("Hash")
                        .IsUnique()
                        .HasDatabaseName("ix_templates_hash");

                    b.ToTable("templates", (string)null);
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Translation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("Created")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created");

                    b.Property<Guid>("LanguageId")
                        .HasColumnType("uuid")
                        .HasColumnName("language_id");

                    b.Property<Guid>("TemplateValueId")
                        .HasColumnType("uuid")
                        .HasColumnName("template_value_id");

                    b.Property<string>("TranslationValue")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)")
                        .HasColumnName("translation_value");

                    b.HasKey("Id")
                        .HasName("pk_translations");

                    b.HasIndex("LanguageId")
                        .HasDatabaseName("ix_translations_language_id");

                    b.HasIndex("TemplateValueId")
                        .HasDatabaseName("ix_translations_template_value_id");

                    b.ToTable("translations", (string)null);
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Value", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset>("CreatedAt")
                        .HasColumnType("timestamp with time zone")
                        .HasColumnName("created_at");

                    b.Property<string>("Hash")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("hash");

                    b.Property<string>("Key")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)")
                        .HasColumnName("key");

                    b.Property<Guid?>("TemplateId")
                        .HasColumnType("uuid")
                        .HasColumnName("template_id");

                    b.HasKey("Id")
                        .HasName("pk_values");

                    b.HasIndex("Hash")
                        .IsUnique()
                        .HasDatabaseName("ix_values_hash");

                    b.ToTable("values", (string)null);
                });

            modelBuilder.Entity("TemplateValue", b =>
                {
                    b.HasOne("Translator.Domain.DataModels.Template", null)
                        .WithMany()
                        .HasForeignKey("TemplatesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_template_values_templates_templates_id");

                    b.HasOne("Translator.Domain.DataModels.Value", null)
                        .WithMany()
                        .HasForeignKey("ValuesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_template_values_values_values_id");
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Category", b =>
                {
                    b.HasOne("Translator.Domain.DataModels.Category", "Parent")
                        .WithMany("Children")
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .HasConstraintName("fk_categories_categories_parent_id");

                    b.Navigation("Parent");
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Translation", b =>
                {
                    b.HasOne("Translator.Domain.DataModels.Language", "Language")
                        .WithMany("Translations")
                        .HasForeignKey("LanguageId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("fk_translations_languages_language_id");

                    b.HasOne("Translator.Domain.DataModels.Value", "Value")
                        .WithMany("Translations")
                        .HasForeignKey("TemplateValueId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("fk_translations_values_template_value_id");

                    b.Navigation("Language");

                    b.Navigation("Value");
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Category", b =>
                {
                    b.Navigation("Children");
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Language", b =>
                {
                    b.Navigation("Translations");
                });

            modelBuilder.Entity("Translator.Domain.DataModels.Value", b =>
                {
                    b.Navigation("Translations");
                });
#pragma warning restore 612, 618
        }
    }
}
